"""Initial migration.

Revision ID: dade39058b16
Revises: 
Create Date: 2024-12-18 16:20:21.485241

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dade39058b16'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )

    # Ensure default user exists
    op.execute("""
        INSERT INTO "user" (id, username, email, password_hash)
        VALUES (1, 'default_user', 'default@example.com', 'hashed_password')
        ON CONFLICT (id) DO NOTHING;
    """)

    # Update invalid user_id entries to 1
    op.execute("""
        UPDATE product_progress
        SET user_id = '1'
        WHERE user_id !~ '^\d+$';
    """)

    with op.batch_alter_table('product_progress', schema=None) as batch_op:
        batch_op.add_column(sa.Column('handle', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('thumbnail', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))

        # Alter user_id column type with USING clause
        batch_op.alter_column(
            'user_id',
            existing_type=sa.TEXT(),
            type_=sa.Integer(),
            existing_nullable=True,
            postgresql_using='user_id::integer'
        )

        batch_op.drop_constraint('product_progress_product_id_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_product_progress_product_id'), ['product_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_product_progress_status'), ['status'], unique=False)
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('error_message')
        batch_op.drop_column('processed_images_count')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product_progress', schema=None) as batch_op:
        batch_op.add_column(sa.Column('processed_images_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('error_message', sa.VARCHAR(length=1024), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_product_progress_status'))
        batch_op.drop_index(batch_op.f('ix_product_progress_product_id'))
        batch_op.create_unique_constraint('product_progress_product_id_key', ['product_id'])
        batch_op.alter_column(
            'user_id',
            existing_type=sa.Integer(),
            type_=sa.TEXT(),
            existing_nullable=True
        )
        batch_op.drop_column('description')
        batch_op.drop_column('thumbnail')
        batch_op.drop_column('handle')

    op.drop_table('user')
    # ### end Alembic commands ###
